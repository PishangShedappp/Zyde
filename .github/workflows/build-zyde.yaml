name: Build Zyde (Windows)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      platforms:
        description: 'Platforms to build (comma-separated: windows, macos, linux)'
        required: true
        default: 'windows'

jobs:
  build-windows:
    name: Build Zyde for Windows (x64)
    runs-on: windows-2022  # Uses Windows 2022 runner

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for proper version detection

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'  # Required for node-gyp

      - name: Install Visual Studio Build Tools
        run: |
          # Download the Visual Studio installer bootstrapper
          Invoke-WebRequest -Uri "https://aka.ms/vs/17/release/vs_buildtools.exe" -OutFile "$env:TEMP\vs_buildtools.exe"

          # First install the core components
          Start-Process -FilePath "$env:TEMP\vs_buildtools.exe" -ArgumentList @(
            "--quiet",
            "--wait",
            "--norestart",
            "--installPath", """C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools""",
            "--add", "Microsoft.VisualStudio.Workload.VCTools",
            "--add", "Microsoft.VisualStudio.Workload.NativeDesktop",
            "--add", "Microsoft.VisualStudio.Component.VC.Tools.x86.x64",
            "--add", "Microsoft.VisualStudio.Component.Windows10SDK.22621",
            "--add", "Microsoft.VisualStudio.Component.VC.ATL",
            "--add", "Microsoft.VisualStudio.Component.VC.ATLMFC"
          ) -NoNewWindow -Wait

          # Then install specific Spectre-mitigated libraries
          Start-Process -FilePath "$env:TEMP\vs_buildtools.exe" -ArgumentList @(
            "--quiet",
            "--wait",
            "--norestart",
            "--installPath", """C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools""",
            "--add", "Microsoft.VisualStudio.Component.VC.Tools.x86.x64",
            "--add", "Microsoft.VisualStudio.Component.VC.Tools.x64.x86.Spectre",
            "--add", "Microsoft.VisualStudio.Component.VC.ATLMFC.Spectre",
            "--add", "Microsoft.VisualStudio.Component.VC.MFC.Spectre",
            "--add", "Microsoft.VisualStudio.Component.VC.ATL.Spectre"
          ) -NoNewWindow -Wait

          Write-Host "Visual Studio installation completed."
        shell: pwsh

      - name: List Available Visual Studio Components and Versions
        run: |
          Write-Host "⚙️ Checking VS Installation Directory..."
          $vsInstallPath = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath
          Write-Host "VS Install Path: $vsInstallPath"

          Write-Host "⚙️ Checking installed VS components..."
          & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -format json | ConvertFrom-Json | Format-List

          Write-Host "⚙️ Checking MSVC Tools directory..."
          $msvcDir = Join-Path $vsInstallPath "VC\Tools\MSVC\"
          if (Test-Path $msvcDir) {
            $msvcVersions = Get-ChildItem $msvcDir -Directory
            Write-Host "Found MSVC versions: $($msvcVersions.Name -join ', ')"

            $latestMsvcVersion = $msvcVersions | Sort-Object -Property Name -Descending | Select-Object -First 1
            Write-Host "Latest MSVC version: $($latestMsvcVersion.Name)"

            # Check for Spectre libraries in the latest version
            $spectrePath = Join-Path $latestMsvcVersion.FullName "lib\x64\spectre"
            if (Test-Path $spectrePath) {
              Write-Host "✅ Spectre libraries found at: $spectrePath"
              Get-ChildItem $spectrePath -File | Select-Object -First 5 | ForEach-Object { Write-Host "  - $($_.Name)" }
            } else {
              Write-Host "❌ Spectre libraries NOT found at expected path: $spectrePath"

              # Let's look for any spectre directory
              $anySpectre = Get-ChildItem -Path (Join-Path $msvcDir "*\lib\*\spectre") -Directory -ErrorAction SilentlyContinue
              if ($anySpectre) {
                Write-Host "Found Spectre libraries in alternative locations:"
                $anySpectre | ForEach-Object { Write-Host "  - $($_.FullName)" }
              } else {
                Write-Host "No Spectre libraries found in any location."
              }
            }
          } else {
            Write-Host "❌ MSVC Tools directory not found at expected location: $msvcDir"
          }
        shell: pwsh

      - name: Set up Visual Studio Environment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          vsversion: '2022'
          arch: 'x64'

      - name: Create .npmrc file
        run: |
          echo "msvs_version=2022" > %USERPROFILE%\.npmrc
          type %USERPROFILE%\.npmrc
        shell: cmd

      - name: Clean npm Cache
        run: npm cache clean --force
        shell: cmd

      - name: Install Required Dependencies
        run: |
          npm install
        shell: cmd

      - name: Build VS Code (Windows x64)
        run: |
          set VSCODE_ARCH=x64
          npm run gulp vscode-win32-x64
        shell: cmd

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zyde-win32-x64
          path: .build/win32-x64
          if-no-files-found: warn
